/******************
 * 
 * Author: yaokai
 * Written: 1/27/2015
 * Last updated: 1/27/2015
 * 
 * Compilation:	javac PercolationStats.java
 * Execution:	java PercolationStats arg0 arg1
 *  
 */

public class PercolationStats {

	private int N, T;				// T independent experiments on an N-by-N grid
	private double[] results;		// save the results of each experiments
	
	/**
	 * perform T independent experiments on an N-by-N grid
	 * @param N
	 * @param T
	 */
	public PercolationStats(int N, int T){
		if(N <= 0 || T <= 0)
			throw new java.lang.IllegalArgumentException("Invalid input!");
		this.N = N;
		this.T = T;
		results = new double[T];		
		while(T-- > 0){
			int count = 0;
			Percolation samplePercolation = new Percolation(N);
			while(!samplePercolation.percolates()){
				int i = StdRandom.uniform(N);
				int j = StdRandom.uniform(N);
				if(samplePercolation.isOpen(i, j))
					continue;
				samplePercolation.open(i, j);
				count++;
			}
			results[T] = (double)count / (double)(N * N);
		}
	}
	
	/**
	 * sample mean of percolation threshold
	 * @return
	 */
	public double mean() {
		double sum = 0;
		for (int i = 0; i < results.length; i++) {
			sum += results[i];		
		}
		return sum / (double)T;
	}
	
	/**
	 * sample standard deviation of percolation threshold
	 * @return
	 */
	public double stddev() {
		double sum = 0;
		double meanValue = mean();
		for (int i = 0; i < results.length; i++) {
			sum += (results[i] - meanValue) * (results[i] - meanValue);
		}
		return Math.sqrt(sum / (double)(T - 1));
	}
	
	
	public double confidenceLo(){
		
	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
