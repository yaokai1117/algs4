/******************
 * 
 * Author: yaokai
 * Written: 1/27/2015
 * Last updated: 1/27/2015
 * 
 * Compilation:	javac Percolation.java
 * Execution:	java Percolation
 *  
 */


public class Percolation {

	private int N; //the size of grid is N-by-N
	
	/**
	 * create N-by-N grid, with all sites blocked
	 * @param N
	 */
	public Percolation(int N){
		boolean [] OpenState = new boolean[N * N ];
		boolean [] VisualSite = new boolean[N];
		WeightedQuickUnionUF uf = new WeightedQuickUnionUF(N * N + N);
		for (int i = 0; i < VisualSite.length; i++) {
			uf.union(0, i);
			uf.union(N * N, N * N + i);
		}
	}
	
	public void open(int i, int j) {
		checkIndices(i, j);
		
	}
	
	/**
	 * map 2D coordinates to 1D coordinates
	 * @param x
	 * @param y
	 * @param N
	 * @return
	 */
	private int xyTo1D(int x, int y) {
		return (x - 1) * N + y - 1;
	}
	
	/**
	 * check if indices are from 1 to N
	 * @param i
	 * @param j
	 * @param N
	 * @return
	 */
	private void checkIndices(int i, int j) {
		if(i < 1 || i > N || j < 0 || j > N)
			throw new IndexOutOfBoundsException("row index i out of bounds");
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
